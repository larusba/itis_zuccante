{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onPress\", \"text\", \"children\", \"navigator\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styles from \"./rounded-button.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function RoundedButton(props) {\n  var onPress = props.onPress,\n    text = props.text,\n    children = props.children,\n    navigator = props.navigator,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var getText = function getText() {\n    var buttonText = text || children || '';\n    return buttonText.toUpperCase();\n  };\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    style: styles.button,\n    onPress: onPress\n  }, otherProps), {}, {\n    children: _jsx(Text, {\n      style: styles.buttonText,\n      children: getText()\n    })\n  }));\n}","map":{"version":3,"names":["React","TouchableOpacity","Text","styles","jsx","_jsx","RoundedButton","props","onPress","text","children","navigator","otherProps","_objectWithoutProperties","_excluded","getText","buttonText","toUpperCase","_objectSpread","style","button"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/components/rounded-button/rounded-button.js"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text } from 'react-native';\nimport styles from './rounded-button.styles';\n\n// type RoundedButtonProps: {\n//     onPress: PropTypes.func,\n//     text: PropTypes.string,\n//     children: PropTypes.string,\n//     navigator: PropTypes.object,\n//     testID: PropTypes.string,\n// }\n\nexport default function RoundedButton(props) {\n  const { onPress, text, children, navigator, ...otherProps } = props;\n\n  const getText = () => {\n    const buttonText = text || children || '';\n    return buttonText.toUpperCase();\n  };\n\n  return (\n    <TouchableOpacity style={styles.button} onPress={onPress} {...otherProps}>\n      <Text style={styles.buttonText}>{getText()}</Text>\n    </TouchableOpacity>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,MAAM;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAU7C,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC3C,IAAQC,OAAO,GAA+CD,KAAK,CAA3DC,OAAO;IAAEC,IAAI,GAAyCF,KAAK,CAAlDE,IAAI;IAAEC,QAAQ,GAA+BH,KAAK,CAA5CG,QAAQ;IAAEC,SAAS,GAAoBJ,KAAK,CAAlCI,SAAS;IAAKC,UAAU,GAAAC,wBAAA,CAAKN,KAAK,EAAAO,SAAA;EAEnE,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpB,IAAMC,UAAU,GAAGP,IAAI,IAAIC,QAAQ,IAAI,EAAE;IACzC,OAAOM,UAAU,CAACC,WAAW,CAAC,CAAC;EACjC,CAAC;EAED,OACEZ,IAAA,CAACJ,gBAAgB,EAAAiB,aAAA,CAAAA,aAAA;IAACC,KAAK,EAAEhB,MAAM,CAACiB,MAAO;IAACZ,OAAO,EAAEA;EAAQ,GAAKI,UAAU;IAAAF,QAAA,EACtEL,IAAA,CAACH,IAAI;MAACiB,KAAK,EAAEhB,MAAM,CAACa,UAAW;MAAAN,QAAA,EAAEK,OAAO,CAAC;IAAC,CAAO;EAAC,EAClC,CAAC;AAEvB"},"metadata":{},"sourceType":"module"}