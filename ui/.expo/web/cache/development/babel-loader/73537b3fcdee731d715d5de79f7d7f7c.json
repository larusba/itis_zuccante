{"ast":null,"code":"import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { persistStore } from 'redux-persist';\nimport ReduxPersist from \"../../config/redux-persist\";\nimport StartupActions from \"../reducers/startup.reducer\";\nvar updateReducers = function updateReducers(store) {\n  var reducerVersion = ReduxPersist.reducerVersion;\n  var startup = function startup() {\n    return store.dispatch(StartupActions.startup());\n  };\n  AsyncStorage.getItem('reducerVersion').then(function (localVersion) {\n    if (localVersion !== reducerVersion) {\n      persistStore(store, null, startup).purge();\n      AsyncStorage.setItem('reducerVersion', reducerVersion);\n    } else {\n      persistStore(store, null, startup);\n    }\n  }).catch(function () {\n    persistStore(store, null, startup);\n    AsyncStorage.setItem('reducerVersion', reducerVersion);\n  });\n};\nexport default {\n  updateReducers: updateReducers\n};","map":{"version":3,"names":["AsyncStorage","persistStore","ReduxPersist","StartupActions","updateReducers","store","reducerVersion","startup","dispatch","getItem","then","localVersion","purge","setItem","catch"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/services/rehydration.service.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { persistStore } from 'redux-persist';\n\nimport ReduxPersist from '../../config/redux-persist';\nimport StartupActions from '../reducers/startup.reducer';\n\nconst updateReducers = store => {\n  const reducerVersion = ReduxPersist.reducerVersion;\n  const startup = () => store.dispatch(StartupActions.startup());\n\n  // Check to ensure latest reducer version\n  AsyncStorage.getItem('reducerVersion')\n    .then(localVersion => {\n      if (localVersion !== reducerVersion) {\n        // Purge store\n        persistStore(store, null, startup).purge();\n        AsyncStorage.setItem('reducerVersion', reducerVersion);\n      } else {\n        persistStore(store, null, startup);\n      }\n    })\n    .catch(() => {\n      persistStore(store, null, startup);\n      AsyncStorage.setItem('reducerVersion', reducerVersion);\n    });\n};\n\nexport default { updateReducers };\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,SAASC,YAAY,QAAQ,eAAe;AAE5C,OAAOC,YAAY;AACnB,OAAOC,cAAc;AAErB,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,KAAK,EAAI;EAC9B,IAAMC,cAAc,GAAGJ,YAAY,CAACI,cAAc;EAClD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;IAAA,OAASF,KAAK,CAACG,QAAQ,CAACL,cAAc,CAACI,OAAO,CAAC,CAAC,CAAC;EAAA;EAG9DP,YAAY,CAACS,OAAO,CAAC,gBAAgB,CAAC,CACnCC,IAAI,CAAC,UAAAC,YAAY,EAAI;IACpB,IAAIA,YAAY,KAAKL,cAAc,EAAE;MAEnCL,YAAY,CAACI,KAAK,EAAE,IAAI,EAAEE,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAC1CZ,YAAY,CAACa,OAAO,CAAC,gBAAgB,EAAEP,cAAc,CAAC;IACxD,CAAC,MAAM;MACLL,YAAY,CAACI,KAAK,EAAE,IAAI,EAAEE,OAAO,CAAC;IACpC;EACF,CAAC,CAAC,CACDO,KAAK,CAAC,YAAM;IACXb,YAAY,CAACI,KAAK,EAAE,IAAI,EAAEE,OAAO,CAAC;IAClCP,YAAY,CAACa,OAAO,CAAC,gBAAgB,EAAEP,cAAc,CAAC;EACxD,CAAC,CAAC;AACN,CAAC;AAED,eAAe;EAAEF,cAAc,EAAdA;AAAe,CAAC"},"metadata":{},"sourceType":"module"}