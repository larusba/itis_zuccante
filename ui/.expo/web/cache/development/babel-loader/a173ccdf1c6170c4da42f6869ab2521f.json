{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"borderless\", \"pressColor\", \"style\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ANDROID_VERSION_LOLLIPOP = 21;\nexport default function TouchableItem(_ref) {\n  var _ref$borderless = _ref.borderless,\n    borderless = _ref$borderless === void 0 ? false : _ref$borderless,\n    _ref$pressColor = _ref.pressColor,\n    pressColor = _ref$pressColor === void 0 ? 'rgba(0, 0, 0, .32)' : _ref$pressColor,\n    style = _ref.style,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n    return _jsx(TouchableNativeFeedback, _objectSpread(_objectSpread({}, rest), {}, {\n      useForeground: TouchableNativeFeedback.canUseNativeForeground(),\n      background: TouchableNativeFeedback.Ripple(pressColor, borderless),\n      children: _jsx(View, {\n        style: style,\n        children: React.Children.only(children)\n      })\n    }));\n  } else {\n    return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n      style: style\n    }, rest), {}, {\n      children: children\n    }));\n  }\n}","map":{"version":3,"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","jsx","_jsx","ANDROID_VERSION_LOLLIPOP","TouchableItem","_ref","_ref$borderless","borderless","_ref$pressColor","pressColor","style","children","rest","_objectWithoutProperties","_excluded","OS","Version","_objectSpread","useForeground","canUseNativeForeground","background","Ripple","Children","only"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/navigation/drawer/touchable-item.tsx"],"sourcesContent":["/*\nMIT License\n\nCopyright (c) 2017 React Navigation Contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n/**\n * From: https://github.com/react-navigation/react-navigation/blob/47f28558d6e94bb5c42a2de88bd3d99f09e9d5bd/packages/drawer/src/views/TouchableItem.tsx\n *\n * TouchableItem provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity to handle platform differences.\n *\n * On Android, you can pass the props of TouchableNativeFeedback.\n * On other platforms, you can pass the props of TouchableOpacity.\n */\nimport * as React from 'react';\nimport { Platform, TouchableNativeFeedback, TouchableOpacity, View, ViewProps } from 'react-native';\n\nexport type Props = ViewProps & {\n    pressColor?: string;\n    disabled?: boolean | null;\n    borderless?: boolean;\n    delayPressIn?: number;\n    onPress?: () => void;\n    children: React.ReactNode;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default function TouchableItem({ borderless = false, pressColor = 'rgba(0, 0, 0, .32)', style, children, ...rest }: Props) {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n        return (\n            <TouchableNativeFeedback\n                {...rest}\n                useForeground={TouchableNativeFeedback.canUseNativeForeground()}\n                background={TouchableNativeFeedback.Ripple(pressColor, borderless)}>\n                <View style={style}>{React.Children.only(children)}</View>\n            </TouchableNativeFeedback>\n        );\n    } else {\n        return (\n            <TouchableOpacity style={style} {...rest}>\n                {children}\n            </TouchableOpacity>\n        );\n    }\n}\n"],"mappings":";;;;;AAgCA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,uBAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAY/B,IAAMC,wBAAwB,GAAG,EAAE;AAEnC,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAA6F;EAAA,IAAAC,eAAA,GAAAD,IAAA,CAA1FE,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,KAAK,GAAAA,eAAA;IAAAE,eAAA,GAAAH,IAAA,CAAEI,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,oBAAoB,GAAAA,eAAA;IAAEE,KAAK,GAAAL,IAAA,CAALK,KAAK;IAAEC,QAAQ,GAAAN,IAAA,CAARM,QAAQ;IAAKC,IAAI,GAAAC,wBAAA,CAAAR,IAAA,EAAAS,SAAA;EASnH,IAAIjB,QAAQ,CAACkB,EAAE,KAAK,SAAS,IAAIlB,QAAQ,CAACmB,OAAO,IAAIb,wBAAwB,EAAE;IAC3E,OACID,IAAA,CAACJ,uBAAuB,EAAAmB,aAAA,CAAAA,aAAA,KAChBL,IAAI;MACRM,aAAa,EAAEpB,uBAAuB,CAACqB,sBAAsB,CAAC,CAAE;MAChEC,UAAU,EAAEtB,uBAAuB,CAACuB,MAAM,CAACZ,UAAU,EAAEF,UAAU,CAAE;MAAAI,QAAA,EACnET,IAAA,CAACF,IAAI;QAACU,KAAK,EAAEA,KAAM;QAAAC,QAAA,EAAEf,KAAK,CAAC0B,QAAQ,CAACC,IAAI,CAACZ,QAAQ;MAAC,CAAO;IAAC,EACrC,CAAC;EAElC,CAAC,MAAM;IACH,OACIT,IAAA,CAACH,gBAAgB,EAAAkB,aAAA,CAAAA,aAAA;MAACP,KAAK,EAAEA;IAAM,GAAKE,IAAI;MAAAD,QAAA,EACnCA;IAAQ,EACK,CAAC;EAE3B;AACJ"},"metadata":{},"sourceType":"module"}