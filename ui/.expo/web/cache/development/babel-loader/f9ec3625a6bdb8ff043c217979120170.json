{"ast":null,"code":"import { call, put, select } from 'redux-saga/effects';\nimport LoginActions from \"./login.reducer\";\nimport AccountActions from \"../../shared/reducers/account.reducer\";\nimport WebsocketService from \"../../shared/websockets/websocket.service\";\nexport var selectAuthToken = function selectAuthToken(state) {\n  return state.login.authToken;\n};\nexport function login(api, _ref) {\n  var username = _ref.username,\n    password = _ref.password;\n  return function* () {\n    var authObj = {\n      username: username,\n      password: password,\n      rememberMe: true\n    };\n    var response = yield call(api.login, authObj);\n    if (response.ok) {\n      yield call(api.setAuthToken, response.data.id_token);\n      yield put(LoginActions.loginSuccess(response.data.id_token));\n      yield put(AccountActions.accountRequest());\n      WebsocketService.setToken(response.data.id_token);\n      yield put({\n        type: 'RELOGIN_OK'\n      });\n    } else {\n      var errorMessage = !response.data ? 'Failed to reach backend API' : response.data && response.data.detail ? response.data.detail : 'Bad credentials';\n      yield put(LoginActions.loginFailure(errorMessage));\n    }\n  }();\n}\nexport function* logout(api) {\n  yield call(api.removeAuthToken);\n  yield put(AccountActions.accountReset());\n  yield put(AccountActions.accountRequest());\n  yield put(LoginActions.logoutSuccess());\n  yield put({\n    type: 'RELOGIN_ABORT'\n  });\n}\nexport function* loginLoad(api) {\n  var authToken = yield select(selectAuthToken);\n  if (authToken) {\n    yield call(api.setAuthToken, authToken);\n    WebsocketService.setToken(authToken);\n  }\n  yield put(LoginActions.loginLoadSuccess());\n}","map":{"version":3,"names":["call","put","select","LoginActions","AccountActions","WebsocketService","selectAuthToken","state","login","authToken","api","_ref","username","password","authObj","rememberMe","response","ok","setAuthToken","data","id_token","loginSuccess","accountRequest","setToken","type","errorMessage","detail","loginFailure","logout","removeAuthToken","accountReset","logoutSuccess","loginLoad","loginLoadSuccess"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/modules/login/login.sagas.js"],"sourcesContent":["import { call, put, select } from 'redux-saga/effects'\n\nimport LoginActions from './login.reducer'\nimport AccountActions from '../../shared/reducers/account.reducer'\nimport WebsocketService from '../../shared/websockets/websocket.service'\n\nexport const selectAuthToken = (state) => state.login.authToken\n// attempts to login\nexport function * login (api, { username, password }) {\n  const authObj = {\n    username: username,\n    password: password,\n    rememberMe: true\n  }\n\n  const response = yield call(api.login, authObj)\n\n  // success?\n  if (response.ok) {\n    yield call(api.setAuthToken, response.data.id_token)\n    yield put(LoginActions.loginSuccess(response.data.id_token))\n    yield put(AccountActions.accountRequest())\n    WebsocketService.setToken(response.data.id_token)\n    yield put({ type: 'RELOGIN_OK' })\n  } else {\n    const errorMessage = !response.data\n      ? 'Failed to reach backend API'\n      : response.data && response.data.detail\n      ? response.data.detail\n      : 'Bad credentials';\n    yield put(LoginActions.loginFailure(errorMessage));\n  }\n}\n// attempts to logout\nexport function * logout (api) {\n  yield call(api.removeAuthToken)\n  yield put(AccountActions.accountReset())\n  yield put(AccountActions.accountRequest())\n  yield put(LoginActions.logoutSuccess())\n  yield put({ type: 'RELOGIN_ABORT' })\n}\n\n// loads the login\nexport function * loginLoad (api) {\n  const authToken = yield select(selectAuthToken)\n  // only set the token if we have it\n  if (authToken) {\n    yield call(api.setAuthToken, authToken)\n    WebsocketService.setToken(authToken)\n  }\n  yield put(LoginActions.loginLoadSuccess())\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAEtD,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,OAAOC,gBAAgB;AAEvB,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK;EAAA,OAAKA,KAAK,CAACC,KAAK,CAACC,SAAS;AAAA;AAE/D,OAAO,SAAWD,KAAKA,CAAEE,GAAG,EAAAC,IAAA;EAAA,IAAIC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EAAA,oBAAI;IACpD,IAAMC,OAAO,GAAG;MACdF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA,QAAQ;MAClBE,UAAU,EAAE;IACd,CAAC;IAED,IAAMC,QAAQ,GAAG,MAAMhB,IAAI,CAACU,GAAG,CAACF,KAAK,EAAEM,OAAO,CAAC;IAG/C,IAAIE,QAAQ,CAACC,EAAE,EAAE;MACf,MAAMjB,IAAI,CAACU,GAAG,CAACQ,YAAY,EAAEF,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;MACpD,MAAMnB,GAAG,CAACE,YAAY,CAACkB,YAAY,CAACL,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC;MAC5D,MAAMnB,GAAG,CAACG,cAAc,CAACkB,cAAc,CAAC,CAAC,CAAC;MAC1CjB,gBAAgB,CAACkB,QAAQ,CAACP,QAAQ,CAACG,IAAI,CAACC,QAAQ,CAAC;MACjD,MAAMnB,GAAG,CAAC;QAAEuB,IAAI,EAAE;MAAa,CAAC,CAAC;IACnC,CAAC,MAAM;MACL,IAAMC,YAAY,GAAG,CAACT,QAAQ,CAACG,IAAI,GAC/B,6BAA6B,GAC7BH,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACO,MAAM,GACrCV,QAAQ,CAACG,IAAI,CAACO,MAAM,GACpB,iBAAiB;MACrB,MAAMzB,GAAG,CAACE,YAAY,CAACwB,YAAY,CAACF,YAAY,CAAC,CAAC;IACpD;EACF,CAAC;AAAA;AAED,OAAO,UAAWG,MAAMA,CAAElB,GAAG,EAAE;EAC7B,MAAMV,IAAI,CAACU,GAAG,CAACmB,eAAe,CAAC;EAC/B,MAAM5B,GAAG,CAACG,cAAc,CAAC0B,YAAY,CAAC,CAAC,CAAC;EACxC,MAAM7B,GAAG,CAACG,cAAc,CAACkB,cAAc,CAAC,CAAC,CAAC;EAC1C,MAAMrB,GAAG,CAACE,YAAY,CAAC4B,aAAa,CAAC,CAAC,CAAC;EACvC,MAAM9B,GAAG,CAAC;IAAEuB,IAAI,EAAE;EAAgB,CAAC,CAAC;AACtC;AAGA,OAAO,UAAWQ,SAASA,CAAEtB,GAAG,EAAE;EAChC,IAAMD,SAAS,GAAG,MAAMP,MAAM,CAACI,eAAe,CAAC;EAE/C,IAAIG,SAAS,EAAE;IACb,MAAMT,IAAI,CAACU,GAAG,CAACQ,YAAY,EAAET,SAAS,CAAC;IACvCJ,gBAAgB,CAACkB,QAAQ,CAACd,SAAS,CAAC;EACtC;EACA,MAAMR,GAAG,CAACE,YAAY,CAAC8B,gBAAgB,CAAC,CAAC,CAAC;AAC5C"},"metadata":{},"sourceType":"module"}