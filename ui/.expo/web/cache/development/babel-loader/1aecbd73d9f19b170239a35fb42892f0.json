{"ast":null,"code":"import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default React.forwardRef(function (props, ref) {\n  var _children = props.children,\n    _props$initialValues = props.initialValues,\n    initialValues = _props$initialValues === void 0 ? {} : _props$initialValues,\n    _props$onSubmit = props.onSubmit,\n    onSubmit = _props$onSubmit === void 0 ? function (d) {\n      return console.log(d);\n    } : _props$onSubmit,\n    _props$validationSche = props.validationSchema,\n    validationSchema = _props$validationSche === void 0 ? Yup.object().shape({}) : _props$validationSche;\n  var fields = _children.filter(function (c) {\n    return c && c.props && c.props.name;\n  }).map(function (c) {\n    return {\n      name: c.props.name,\n      inputType: c.props.inputType\n    };\n  });\n  var fieldNames = fields.map(function (field) {\n    return field.name;\n  });\n  fields.forEach(function (_ref) {\n    var name = _ref.name,\n      inputType = _ref.inputType;\n    if (!initialValues[name]) {\n      if (inputType === 'date' || inputType === 'datetime') {\n        initialValues[name] = new Date();\n      } else if (inputType === 'select-multiple') {\n        initialValues[name] = [];\n      } else {\n        initialValues[name] = '';\n      }\n    }\n  });\n  if (validationSchema && validationSchema.fields) {\n    var missingValidatedFields = Object.keys(validationSchema.fields).filter(function (f) {\n      return !fieldNames.includes(f);\n    });\n    if (missingValidatedFields.length) {\n      console.warn(\"Validating field(s) '\" + missingValidatedFields.join(', ') + \"', but no Input is present in the form. It will fail to submit\");\n    }\n  }\n  return _jsx(Formik, {\n    innerRef: ref,\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: function children() {\n      return _jsx(React.Fragment, {\n        children: _children\n      });\n    }\n  });\n});","map":{"version":3,"names":["React","Formik","Yup","jsx","_jsx","forwardRef","props","ref","children","_props$initialValues","initialValues","_props$onSubmit","onSubmit","d","console","log","_props$validationSche","validationSchema","object","shape","fields","filter","c","name","map","inputType","fieldNames","field","forEach","_ref","Date","missingValidatedFields","Object","keys","f","includes","length","warn","join","innerRef","Fragment"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/components/form/jhi-form.js"],"sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nexport default React.forwardRef((props, ref) => {\n  const { children, initialValues = {}, onSubmit = (d) => console.log(d), validationSchema = Yup.object().shape({}) } = props;\n\n  // get list of field names\n  const fields = children.filter((c) => c && c.props && c.props.name).map((c) => ({ name: c.props.name, inputType: c.props.inputType }));\n  const fieldNames = fields.map((field) => field.name);\n\n  // ensure an initial value is provided for each field\n  fields.forEach(({ name, inputType }) => {\n    if (!initialValues[name]) {\n      if (inputType === 'date' || inputType === 'datetime') {\n        initialValues[name] = new Date();\n      } else if (inputType === 'select-multiple') {\n        initialValues[name] = [];\n      } else {\n        initialValues[name] = '';\n      }\n    }\n  });\n  // ensure that the validationSchema does not contain validation for non-existent fields, causing submit to fail\n  if (validationSchema && validationSchema.fields) {\n    const missingValidatedFields = Object.keys(validationSchema.fields).filter((f) => !fieldNames.includes(f));\n    if (missingValidatedFields.length) {\n      console.warn(\n        `Validating field(s) '${missingValidatedFields.join(', ')}', but no Input is present in the form. It will fail to submit`,\n      );\n    }\n  }\n\n  return (\n    <Formik innerRef={ref} initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {() => <React.Fragment>{children}</React.Fragment>}\n    </Formik>\n  );\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE3B,eAAeJ,KAAK,CAACK,UAAU,CAAC,UAACC,KAAK,EAAEC,GAAG,EAAK;EAC9C,IAAQC,SAAQ,GAAsGF,KAAK,CAAnHE,QAAQ;IAAAC,oBAAA,GAAsGH,KAAK,CAAzGI,aAAa;IAAbA,aAAa,GAAAD,oBAAA,cAAG,CAAC,CAAC,GAAAA,oBAAA;IAAAE,eAAA,GAAkFL,KAAK,CAArFM,QAAQ;IAARA,QAAQ,GAAAD,eAAA,cAAG,UAACE,CAAC;MAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAAA,IAAAF,eAAA;IAAAK,qBAAA,GAAgDV,KAAK,CAAnDW,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAGd,GAAG,CAACgB,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAAH,qBAAA;EAGjH,IAAMI,MAAM,GAAGZ,SAAQ,CAACa,MAAM,CAAC,UAACC,CAAC;IAAA,OAAKA,CAAC,IAAIA,CAAC,CAAChB,KAAK,IAAIgB,CAAC,CAAChB,KAAK,CAACiB,IAAI;EAAA,EAAC,CAACC,GAAG,CAAC,UAACF,CAAC;IAAA,OAAM;MAAEC,IAAI,EAAED,CAAC,CAAChB,KAAK,CAACiB,IAAI;MAAEE,SAAS,EAAEH,CAAC,CAAChB,KAAK,CAACmB;IAAU,CAAC;EAAA,CAAC,CAAC;EACtI,IAAMC,UAAU,GAAGN,MAAM,CAACI,GAAG,CAAC,UAACG,KAAK;IAAA,OAAKA,KAAK,CAACJ,IAAI;EAAA,EAAC;EAGpDH,MAAM,CAACQ,OAAO,CAAC,UAAAC,IAAA,EAAyB;IAAA,IAAtBN,IAAI,GAAAM,IAAA,CAAJN,IAAI;MAAEE,SAAS,GAAAI,IAAA,CAATJ,SAAS;IAC/B,IAAI,CAACf,aAAa,CAACa,IAAI,CAAC,EAAE;MACxB,IAAIE,SAAS,KAAK,MAAM,IAAIA,SAAS,KAAK,UAAU,EAAE;QACpDf,aAAa,CAACa,IAAI,CAAC,GAAG,IAAIO,IAAI,CAAC,CAAC;MAClC,CAAC,MAAM,IAAIL,SAAS,KAAK,iBAAiB,EAAE;QAC1Cf,aAAa,CAACa,IAAI,CAAC,GAAG,EAAE;MAC1B,CAAC,MAAM;QACLb,aAAa,CAACa,IAAI,CAAC,GAAG,EAAE;MAC1B;IACF;EACF,CAAC,CAAC;EAEF,IAAIN,gBAAgB,IAAIA,gBAAgB,CAACG,MAAM,EAAE;IAC/C,IAAMW,sBAAsB,GAAGC,MAAM,CAACC,IAAI,CAAChB,gBAAgB,CAACG,MAAM,CAAC,CAACC,MAAM,CAAC,UAACa,CAAC;MAAA,OAAK,CAACR,UAAU,CAACS,QAAQ,CAACD,CAAC,CAAC;IAAA,EAAC;IAC1G,IAAIH,sBAAsB,CAACK,MAAM,EAAE;MACjCtB,OAAO,CAACuB,IAAI,2BACcN,sBAAsB,CAACO,IAAI,CAAC,IAAI,CAAC,mEAC3D,CAAC;IACH;EACF;EAEA,OACElC,IAAA,CAACH,MAAM;IAACsC,QAAQ,EAAEhC,GAAI;IAACG,aAAa,EAAEA,aAAc;IAACO,gBAAgB,EAAEA,gBAAiB;IAACL,QAAQ,EAAEA,QAAS;IAAAJ,QAAA,EACzG,SAAAA,SAAA;MAAA,OAAMJ,IAAA,CAACJ,KAAK,CAACwC,QAAQ;QAAAhC,QAAA,EAAEA;MAAQ,CAAiB,CAAC;IAAA;EAAA,CAC5C,CAAC;AAEb,CAAC,CAAC"},"metadata":{},"sourceType":"module"}