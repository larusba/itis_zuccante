{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport AccountActions from \"../reducers/account.reducer\";\nimport { callApi } from \"./call-api.saga\";\nexport function* getAccount(api) {\n  var _response$headers$con;\n  var response = yield call(api.getAccount);\n  if (response.ok && ((_response$headers$con = response.headers['content-type']) == null ? void 0 : _response$headers$con.indexOf('json')) !== -1) {\n    console.log('Account - OK');\n    yield put(AccountActions.accountSuccess(response.data));\n  } else {\n    console.log('Account - FAIL');\n    yield put(AccountActions.accountFailure(response.data && response.data.detail || 'Failed to get account'));\n  }\n}\nexport function* updateAccount(api, action) {\n  var account = action.account;\n  var apiCall = call(api.updateAccount, account);\n  var response = yield call(callApi, apiCall);\n  if (response.ok) {\n    console.log('AccountUpdate - OK');\n    yield put(AccountActions.accountUpdateSuccess());\n  } else {\n    console.log('AccountUpdate - FAIL');\n    yield put(AccountActions.accountUpdateFailure(response.data && response.data.detail || 'Failed to update account'));\n  }\n}","map":{"version":3,"names":["call","put","AccountActions","callApi","getAccount","api","_response$headers$con","response","ok","headers","indexOf","console","log","accountSuccess","data","accountFailure","detail","updateAccount","action","account","apiCall","accountUpdateSuccess","accountUpdateFailure"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/sagas/account.sagas.js"],"sourcesContent":["import { call, put } from 'redux-saga/effects';\n\nimport AccountActions from '../reducers/account.reducer';\nimport { callApi } from './call-api.saga';\n\n// attempts to account\nexport function* getAccount(api) {\n  const response = yield call(api.getAccount);\n\n  // success?\n  if (response.ok && response.headers['content-type']?.indexOf('json') !== -1) {\n    console.log('Account - OK');\n    yield put(AccountActions.accountSuccess(response.data));\n  } else {\n    console.log('Account - FAIL');\n    yield put(AccountActions.accountFailure((response.data && response.data.detail) || 'Failed to get account'));\n  }\n}\n\n// attempts to update account settings\nexport function* updateAccount(api, action) {\n  const { account } = action;\n  const apiCall = call(api.updateAccount, account);\n  const response = yield call(callApi, apiCall);\n\n  // success?\n  if (response.ok) {\n    console.log('AccountUpdate - OK');\n    yield put(AccountActions.accountUpdateSuccess());\n  } else {\n    console.log('AccountUpdate - FAIL');\n    yield put(AccountActions.accountUpdateFailure((response.data && response.data.detail) || 'Failed to update account'));\n  }\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAE9C,OAAOC,cAAc;AACrB,SAASC,OAAO;AAGhB,OAAO,UAAUC,UAAUA,CAACC,GAAG,EAAE;EAAA,IAAAC,qBAAA;EAC/B,IAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACK,GAAG,CAACD,UAAU,CAAC;EAG3C,IAAIG,QAAQ,CAACC,EAAE,IAAI,EAAAF,qBAAA,GAAAC,QAAQ,CAACE,OAAO,CAAC,cAAc,CAAC,qBAAhCH,qBAAA,CAAkCI,OAAO,CAAC,MAAM,CAAC,MAAK,CAAC,CAAC,EAAE;IAC3EC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMX,GAAG,CAACC,cAAc,CAACW,cAAc,CAACN,QAAQ,CAACO,IAAI,CAAC,CAAC;EACzD,CAAC,MAAM;IACLH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,MAAMX,GAAG,CAACC,cAAc,CAACa,cAAc,CAAER,QAAQ,CAACO,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACE,MAAM,IAAK,uBAAuB,CAAC,CAAC;EAC9G;AACF;AAGA,OAAO,UAAUC,aAAaA,CAACZ,GAAG,EAAEa,MAAM,EAAE;EAC1C,IAAQC,OAAO,GAAKD,MAAM,CAAlBC,OAAO;EACf,IAAMC,OAAO,GAAGpB,IAAI,CAACK,GAAG,CAACY,aAAa,EAAEE,OAAO,CAAC;EAChD,IAAMZ,QAAQ,GAAG,MAAMP,IAAI,CAACG,OAAO,EAAEiB,OAAO,CAAC;EAG7C,IAAIb,QAAQ,CAACC,EAAE,EAAE;IACfG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,MAAMX,GAAG,CAACC,cAAc,CAACmB,oBAAoB,CAAC,CAAC,CAAC;EAClD,CAAC,MAAM;IACLV,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMX,GAAG,CAACC,cAAc,CAACoB,oBAAoB,CAAEf,QAAQ,CAACO,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACE,MAAM,IAAK,0BAA0B,CAAC,CAAC;EACvH;AACF"},"metadata":{},"sourceType":"module"}