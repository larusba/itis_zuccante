{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport UserActions from \"../reducers/user.reducer\";\nimport { callApi } from \"./call-api.saga\";\nfunction* getUser(api, action) {\n  var userId = action.userId;\n  var apiCall = call(api.getUser, userId);\n  var response = yield call(callApi, apiCall);\n  if (response.ok) {\n    yield put(UserActions.userSuccess(response.data));\n  } else {\n    yield put(UserActions.userFailure(response.data));\n  }\n}\nfunction* getAllUsers(api, action) {\n  var options = action.options;\n  var apiCall = call(api.getAllUsers, options);\n  var response = yield call(callApi, apiCall);\n  if (response.ok) {\n    yield put(UserActions.userAllSuccess(response.data));\n  } else {\n    yield put(UserActions.userAllFailure(response.data));\n  }\n}\nfunction* updateUser(api, action) {\n  var user = action.user;\n  var idIsNotNull = !(user.id === null || user.id === undefined);\n  var apiCall = call(idIsNotNull ? api.updateUser : api.createUser, user);\n  var response = yield call(callApi, apiCall);\n  if (response.ok) {\n    yield put(UserActions.userUpdateSuccess(response.data));\n  } else {\n    yield put(UserActions.userUpdateFailure(response.data));\n  }\n}\nfunction* deleteUser(api, action) {\n  var userId = action.userId;\n  var apiCall = call(api.deleteUser, userId);\n  var response = yield call(callApi, apiCall);\n  if (response.ok) {\n    yield put(UserActions.userDeleteSuccess());\n  } else {\n    yield put(UserActions.userDeleteFailure(response.data));\n  }\n}\nexport default {\n  getUser: getUser,\n  getAllUsers: getAllUsers,\n  deleteUser: deleteUser,\n  updateUser: updateUser\n};","map":{"version":3,"names":["call","put","UserActions","callApi","getUser","api","action","userId","apiCall","response","ok","userSuccess","data","userFailure","getAllUsers","options","userAllSuccess","userAllFailure","updateUser","user","idIsNotNull","id","undefined","createUser","userUpdateSuccess","userUpdateFailure","deleteUser","userDeleteSuccess","userDeleteFailure"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/sagas/user.sagas.js"],"sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport UserActions from '../reducers/user.reducer'\nimport { callApi } from './call-api.saga'\n\nfunction * getUser (api, action) {\n  const { userId } = action\n  // make the call to the api\n  const apiCall = call(api.getUser, userId)\n  const response = yield call(callApi, apiCall)\n\n  // success?\n  if (response.ok) {\n    yield put(UserActions.userSuccess(response.data))\n  } else {\n    yield put(UserActions.userFailure(response.data))\n  }\n}\n\nfunction * getAllUsers (api, action) {\n  const { options } = action\n  // make the call to the api\n  const apiCall = call(api.getAllUsers, options)\n  const response = yield call(callApi, apiCall)\n\n  // success?\n  if (response.ok) {\n    yield put(UserActions.userAllSuccess(response.data))\n  } else {\n    yield put(UserActions.userAllFailure(response.data))\n  }\n}\n\nfunction * updateUser (api, action) {\n  const { user } = action\n  // make the call to the api\n  const idIsNotNull = !(user.id === null || user.id === undefined);\n  const apiCall = call(idIsNotNull ? api.updateUser : api.createUser, user)\n  const response = yield call(callApi, apiCall)\n\n  // success?\n  if (response.ok) {\n    yield put(UserActions.userUpdateSuccess(response.data))\n  } else {\n    yield put(UserActions.userUpdateFailure(response.data))\n  }\n}\n\nfunction * deleteUser (api, action) {\n  const { userId } = action\n  // make the call to the api\n  const apiCall = call(api.deleteUser, userId)\n  const response = yield call(callApi, apiCall)\n\n  // success?\n  if (response.ok) {\n    yield put(UserActions.userDeleteSuccess())\n  } else {\n    yield put(UserActions.userDeleteFailure(response.data))\n  }\n}\n\nexport default {\n  getUser,\n  getAllUsers,\n  deleteUser,\n  updateUser,\n};\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9C,OAAOC,WAAW;AAClB,SAASC,OAAO;AAEhB,UAAWC,OAAOA,CAAEC,GAAG,EAAEC,MAAM,EAAE;EAC/B,IAAQC,MAAM,GAAKD,MAAM,CAAjBC,MAAM;EAEd,IAAMC,OAAO,GAAGR,IAAI,CAACK,GAAG,CAACD,OAAO,EAAEG,MAAM,CAAC;EACzC,IAAME,QAAQ,GAAG,MAAMT,IAAI,CAACG,OAAO,EAAEK,OAAO,CAAC;EAG7C,IAAIC,QAAQ,CAACC,EAAE,EAAE;IACf,MAAMT,GAAG,CAACC,WAAW,CAACS,WAAW,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnD,CAAC,MAAM;IACL,MAAMX,GAAG,CAACC,WAAW,CAACW,WAAW,CAACJ,QAAQ,CAACG,IAAI,CAAC,CAAC;EACnD;AACF;AAEA,UAAWE,WAAWA,CAAET,GAAG,EAAEC,MAAM,EAAE;EACnC,IAAQS,OAAO,GAAKT,MAAM,CAAlBS,OAAO;EAEf,IAAMP,OAAO,GAAGR,IAAI,CAACK,GAAG,CAACS,WAAW,EAAEC,OAAO,CAAC;EAC9C,IAAMN,QAAQ,GAAG,MAAMT,IAAI,CAACG,OAAO,EAAEK,OAAO,CAAC;EAG7C,IAAIC,QAAQ,CAACC,EAAE,EAAE;IACf,MAAMT,GAAG,CAACC,WAAW,CAACc,cAAc,CAACP,QAAQ,CAACG,IAAI,CAAC,CAAC;EACtD,CAAC,MAAM;IACL,MAAMX,GAAG,CAACC,WAAW,CAACe,cAAc,CAACR,QAAQ,CAACG,IAAI,CAAC,CAAC;EACtD;AACF;AAEA,UAAWM,UAAUA,CAAEb,GAAG,EAAEC,MAAM,EAAE;EAClC,IAAQa,IAAI,GAAKb,MAAM,CAAfa,IAAI;EAEZ,IAAMC,WAAW,GAAG,EAAED,IAAI,CAACE,EAAE,KAAK,IAAI,IAAIF,IAAI,CAACE,EAAE,KAAKC,SAAS,CAAC;EAChE,IAAMd,OAAO,GAAGR,IAAI,CAACoB,WAAW,GAAGf,GAAG,CAACa,UAAU,GAAGb,GAAG,CAACkB,UAAU,EAAEJ,IAAI,CAAC;EACzE,IAAMV,QAAQ,GAAG,MAAMT,IAAI,CAACG,OAAO,EAAEK,OAAO,CAAC;EAG7C,IAAIC,QAAQ,CAACC,EAAE,EAAE;IACf,MAAMT,GAAG,CAACC,WAAW,CAACsB,iBAAiB,CAACf,QAAQ,CAACG,IAAI,CAAC,CAAC;EACzD,CAAC,MAAM;IACL,MAAMX,GAAG,CAACC,WAAW,CAACuB,iBAAiB,CAAChB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACzD;AACF;AAEA,UAAWc,UAAUA,CAAErB,GAAG,EAAEC,MAAM,EAAE;EAClC,IAAQC,MAAM,GAAKD,MAAM,CAAjBC,MAAM;EAEd,IAAMC,OAAO,GAAGR,IAAI,CAACK,GAAG,CAACqB,UAAU,EAAEnB,MAAM,CAAC;EAC5C,IAAME,QAAQ,GAAG,MAAMT,IAAI,CAACG,OAAO,EAAEK,OAAO,CAAC;EAG7C,IAAIC,QAAQ,CAACC,EAAE,EAAE;IACf,MAAMT,GAAG,CAACC,WAAW,CAACyB,iBAAiB,CAAC,CAAC,CAAC;EAC5C,CAAC,MAAM;IACL,MAAM1B,GAAG,CAACC,WAAW,CAAC0B,iBAAiB,CAACnB,QAAQ,CAACG,IAAI,CAAC,CAAC;EACzD;AACF;AAEA,eAAe;EACbR,OAAO,EAAPA,OAAO;EACPU,WAAW,EAAXA,WAAW;EACXY,UAAU,EAAVA,UAAU;EACVR,UAAU,EAAVA;AACF,CAAC"},"metadata":{},"sourceType":"module"}