{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport deepEqual from 'deep-equal';\nimport * as React from 'react';\nimport parseErrorStack from \"./parseErrorStack\";\nexport default function useDevToolsBase(ref, callback) {\n  var lastStateRef = React.useRef();\n  var lastActionRef = React.useRef();\n  var callbackRef = React.useRef(callback);\n  var lastResetRef = React.useRef(undefined);\n  React.useEffect(function () {\n    callbackRef.current = callback;\n  });\n  var symbolicate = function () {\n    var _ref2 = _asyncToGenerator(function* (stack) {\n      var _frames$, _frames$$file;\n      if (stack == null) {\n        return undefined;\n      }\n      var frames = parseErrorStack(stack).slice(2).filter(function (frame) {\n        return frame.file !== '[native code]';\n      });\n      var urlMatch = (_frames$ = frames[0]) === null || _frames$ === void 0 ? void 0 : (_frames$$file = _frames$.file) === null || _frames$$file === void 0 ? void 0 : _frames$$file.match(/^https?:\\/\\/.+(:\\d+)?\\//);\n      if (!urlMatch) {\n        return stack;\n      }\n      try {\n        var result = yield fetch(urlMatch[0] + \"symbolicate\", {\n          method: 'POST',\n          body: JSON.stringify({\n            stack: frames\n          })\n        }).then(function (res) {\n          return res.json();\n        });\n        return result.stack.filter(function (it) {\n          return !it.collapse;\n        }).map(function (_ref) {\n          var methodName = _ref.methodName,\n            file = _ref.file,\n            lineNumber = _ref.lineNumber,\n            column = _ref.column;\n          return methodName + \"@\" + file + \":\" + lineNumber + \":\" + column;\n        }).join('\\n');\n      } catch (err) {\n        return stack;\n      }\n    });\n    return function symbolicate(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var pendingPromiseRef = React.useRef(Promise.resolve());\n  var send = React.useCallback(function (data) {\n    pendingPromiseRef.current = pendingPromiseRef.current.catch(function () {}).then(_asyncToGenerator(function* () {\n      if (data.stack) {\n        var stack;\n        try {\n          stack = yield symbolicate(data.stack);\n        } catch (err) {}\n        callbackRef.current(_objectSpread(_objectSpread({}, data), {}, {\n          stack: stack\n        }));\n      } else {\n        callbackRef.current(data);\n      }\n    }));\n  }, []);\n  React.useEffect(function () {\n    var timer;\n    var unsubscribeAction;\n    var unsubscribeState;\n    var initialize = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        if (!ref.current) {\n          yield new Promise(function (resolve) {\n            timer = setInterval(function () {\n              if (ref.current) {\n                resolve();\n                clearTimeout(timer);\n                var state = ref.current.getRootState();\n                lastStateRef.current = state;\n                callbackRef.current({\n                  type: 'init',\n                  state: state\n                });\n              }\n            }, 100);\n          });\n        }\n        var navigation = ref.current;\n        unsubscribeAction = navigation.addListener('__unsafe_action__', function (e) {\n          var action = e.data.action;\n          if (e.data.noop) {\n            send({\n              type: 'action',\n              action: action,\n              state: lastStateRef.current,\n              stack: e.data.stack\n            });\n          } else {\n            lastActionRef.current = e.data;\n          }\n        });\n        unsubscribeState = navigation.addListener('state', function (e) {\n          if (lastResetRef.current && deepEqual(lastResetRef.current, e.data.state)) {\n            lastStateRef.current = undefined;\n            return;\n          }\n          var state = navigation.getRootState();\n          var lastState = lastStateRef.current;\n          var lastChange = lastActionRef.current;\n          lastActionRef.current = undefined;\n          lastStateRef.current = state;\n          if (lastChange === undefined && deepEqual(state, lastState)) {\n            return;\n          }\n          send({\n            type: 'action',\n            action: lastChange ? lastChange.action : {\n              type: '@@UNKNOWN'\n            },\n            state: state,\n            stack: lastChange === null || lastChange === void 0 ? void 0 : lastChange.stack\n          });\n        });\n      });\n      return function initialize() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    initialize();\n    return function () {\n      var _unsubscribeAction, _unsubscribeState;\n      (_unsubscribeAction = unsubscribeAction) === null || _unsubscribeAction === void 0 ? void 0 : _unsubscribeAction();\n      (_unsubscribeState = unsubscribeState) === null || _unsubscribeState === void 0 ? void 0 : _unsubscribeState();\n      clearTimeout(timer);\n    };\n  }, [ref, send]);\n  var resetRoot = React.useCallback(function (state) {\n    if (ref.current) {\n      lastResetRef.current = state;\n      ref.current.resetRoot(state);\n    }\n  }, [ref]);\n  return {\n    resetRoot: resetRoot\n  };\n}","map":{"version":3,"names":["deepEqual","React","parseErrorStack","useDevToolsBase","ref","callback","lastStateRef","useRef","lastActionRef","callbackRef","lastResetRef","undefined","useEffect","current","symbolicate","_ref2","_asyncToGenerator","stack","_frames$","_frames$$file","frames","slice","filter","frame","file","urlMatch","match","result","fetch","method","body","JSON","stringify","then","res","json","it","collapse","map","_ref","methodName","lineNumber","column","join","err","_x","apply","arguments","pendingPromiseRef","Promise","resolve","send","useCallback","data","catch","_objectSpread","timer","unsubscribeAction","unsubscribeState","initialize","_ref4","setInterval","clearTimeout","state","getRootState","type","navigation","addListener","e","action","noop","lastState","lastChange","_unsubscribeAction","_unsubscribeState","resetRoot"],"sources":["useDevToolsBase.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationContainerRef,\n  NavigationState,\n} from '@react-navigation/core';\nimport deepEqual from 'deep-equal';\nimport * as React from 'react';\n\nimport parseErrorStack from './parseErrorStack';\n\ntype StackFrame = {\n  lineNumber: number | null;\n  column: number | null;\n  file: string | null;\n  methodName: string;\n};\n\ntype StackFrameResult = StackFrame & {\n  collapse: boolean;\n};\n\ntype StackResult = {\n  stack: StackFrameResult[];\n};\n\ntype InitData = {\n  type: 'init';\n  state: NavigationState | undefined;\n};\n\ntype ActionData = {\n  type: 'action';\n  action: NavigationAction;\n  state: NavigationState | undefined;\n  stack: string | undefined;\n};\n\nexport default function useDevToolsBase(\n  ref: React.RefObject<NavigationContainerRef<any>>,\n  callback: (result: InitData | ActionData) => void\n) {\n  const lastStateRef = React.useRef<NavigationState | undefined>();\n  const lastActionRef = React.useRef<\n    { action: NavigationAction; stack: string | undefined } | undefined\n  >();\n  const callbackRef = React.useRef(callback);\n  const lastResetRef = React.useRef<NavigationState | undefined>(undefined);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  const symbolicate = async (stack: string | undefined) => {\n    if (stack == null) {\n      return undefined;\n    }\n\n    const frames = parseErrorStack(stack)\n      .slice(2)\n      .filter((frame) => frame.file !== '[native code]');\n\n    const urlMatch = frames[0]?.file?.match(/^https?:\\/\\/.+(:\\d+)?\\//);\n\n    if (!urlMatch) {\n      return stack;\n    }\n\n    try {\n      const result: StackResult = await fetch(`${urlMatch[0]}symbolicate`, {\n        method: 'POST',\n        body: JSON.stringify({ stack: frames }),\n      }).then((res) => res.json());\n\n      return result.stack\n        .filter((it) => !it.collapse)\n        .map(\n          ({ methodName, file, lineNumber, column }) =>\n            `${methodName}@${file}:${lineNumber}:${column}`\n        )\n        .join('\\n');\n    } catch (err) {\n      return stack;\n    }\n  };\n\n  const pendingPromiseRef = React.useRef<Promise<void>>(Promise.resolve());\n\n  const send = React.useCallback((data: ActionData) => {\n    // We need to make sure that our callbacks executed in the same order\n    // So we add check if the last promise is settled before sending the next one\n    pendingPromiseRef.current = pendingPromiseRef.current\n      .catch(() => {\n        // Ignore any errors from the last promise\n      })\n      .then(async () => {\n        if (data.stack) {\n          let stack: string | undefined;\n\n          try {\n            stack = await symbolicate(data.stack);\n          } catch (err) {\n            // Ignore errors from symbolicate\n          }\n\n          callbackRef.current({ ...data, stack });\n        } else {\n          callbackRef.current(data);\n        }\n      });\n  }, []);\n\n  React.useEffect(() => {\n    let timer: any;\n    let unsubscribeAction: (() => void) | undefined;\n    let unsubscribeState: (() => void) | undefined;\n\n    const initialize = async () => {\n      if (!ref.current) {\n        // If the navigation object isn't ready yet, wait for it\n        await new Promise<void>((resolve) => {\n          timer = setInterval(() => {\n            if (ref.current) {\n              resolve();\n              clearTimeout(timer);\n              const state = ref.current.getRootState();\n\n              lastStateRef.current = state;\n              callbackRef.current({ type: 'init', state });\n            }\n          }, 100);\n        });\n      }\n\n      const navigation = ref.current!;\n\n      unsubscribeAction = navigation.addListener('__unsafe_action__', (e) => {\n        const action = e.data.action;\n\n        if (e.data.noop) {\n          // Even if the state didn't change, it's useful to show the action\n          send({\n            type: 'action',\n            action,\n            state: lastStateRef.current,\n            stack: e.data.stack,\n          });\n        } else {\n          lastActionRef.current = e.data;\n        }\n      });\n\n      unsubscribeState = navigation.addListener('state', (e) => {\n        // Don't show the action in dev tools if the state is what we sent to reset earlier\n        if (\n          lastResetRef.current &&\n          deepEqual(lastResetRef.current, e.data.state)\n        ) {\n          lastStateRef.current = undefined;\n          return;\n        }\n\n        const state = navigation.getRootState();\n        const lastState = lastStateRef.current;\n        const lastChange = lastActionRef.current;\n\n        lastActionRef.current = undefined;\n        lastStateRef.current = state;\n\n        // If we don't have an action and the state didn't change, then it's probably extraneous\n        if (lastChange === undefined && deepEqual(state, lastState)) {\n          return;\n        }\n\n        send({\n          type: 'action',\n          action: lastChange ? lastChange.action : { type: '@@UNKNOWN' },\n          state,\n          stack: lastChange?.stack,\n        });\n      });\n    };\n\n    initialize();\n\n    return () => {\n      unsubscribeAction?.();\n      unsubscribeState?.();\n      clearTimeout(timer);\n    };\n  }, [ref, send]);\n\n  const resetRoot = React.useCallback(\n    (state: NavigationState) => {\n      if (ref.current) {\n        lastResetRef.current = state;\n        ref.current.resetRoot(state);\n      }\n    },\n    [ref]\n  );\n\n  return { resetRoot };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}