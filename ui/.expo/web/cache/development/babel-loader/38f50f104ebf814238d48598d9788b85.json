{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _createReducer;\nimport { createReducer, createActions } from 'reduxsauce';\nimport Immutable from 'seamless-immutable';\nvar _createActions = createActions({\n    loginRequest: ['username', 'password'],\n    loginSuccess: ['authToken', 'idToken'],\n    loginFailure: ['error'],\n    logoutRequest: null,\n    logoutSuccess: null,\n    loginLoad: [],\n    loginLoadSuccess: []\n  }),\n  Types = _createActions.Types,\n  Creators = _createActions.Creators;\nexport var LoginTypes = Types;\nexport default Creators;\nexport var INITIAL_STATE = Immutable({\n  authToken: null,\n  idToken: null,\n  error: null,\n  fetching: false,\n  loading: false\n});\nexport var request = function request(state) {\n  return state.merge({\n    fetching: true,\n    error: null\n  });\n};\nexport var success = function success(state, data) {\n  var authToken = data.authToken,\n    idToken = data.idToken;\n  return state.merge({\n    fetching: false,\n    error: null,\n    authToken: authToken,\n    idToken: idToken\n  });\n};\nexport var failure = function failure(state, _ref) {\n  var error = _ref.error;\n  return state.merge({\n    fetching: false,\n    error: error,\n    authToken: null\n  });\n};\nexport var load = function load(state) {\n  return state.merge({\n    loading: true\n  });\n};\nexport var loadSuccess = function loadSuccess(state) {\n  return state.merge({\n    loading: false\n  });\n};\nexport var logoutRequest = function logoutRequest(state) {\n  return state;\n};\nexport var logoutSuccess = function logoutSuccess(state) {\n  return INITIAL_STATE;\n};\nexport var reducer = createReducer(INITIAL_STATE, (_createReducer = {}, _defineProperty(_createReducer, Types.LOGIN_REQUEST, request), _defineProperty(_createReducer, Types.LOGIN_SUCCESS, success), _defineProperty(_createReducer, Types.LOGIN_FAILURE, failure), _defineProperty(_createReducer, Types.LOGIN_LOAD, load), _defineProperty(_createReducer, Types.LOGIN_LOAD_SUCCESS, loadSuccess), _defineProperty(_createReducer, Types.LOGOUT_REQUEST, logoutRequest), _defineProperty(_createReducer, Types.LOGOUT_SUCCESS, logoutSuccess), _createReducer));","map":{"version":3,"names":["createReducer","createActions","Immutable","_createActions","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","loginLoad","loginLoadSuccess","Types","Creators","LoginTypes","INITIAL_STATE","authToken","idToken","error","fetching","loading","request","state","merge","success","data","failure","_ref","load","loadSuccess","reducer","_createReducer","_defineProperty","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGIN_LOAD","LOGIN_LOAD_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/modules/login/login.reducer.js"],"sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['username', 'password'],\n  loginSuccess: ['authToken', 'idToken'],\n  loginFailure: ['error'],\n  logoutRequest: null,\n  logoutSuccess: null,\n  loginLoad: [],\n  loginLoadSuccess: []\n})\n\nexport const LoginTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  authToken: null,\n  idToken: null,\n  error: null,\n  fetching: false,\n  loading: false\n})\n\n/* ------------- Reducers ------------- */\n\n// we're attempting to login\nexport const request = (state) => state.merge({ fetching: true, error: null })\n\n// we've successfully logged in\nexport const success = (state, data) => {\n  const { authToken, idToken } = data;\n  return state.merge({ fetching: false, error: null, authToken, idToken });\n}\n\n// we've had a problem logging in\nexport const failure = (state, { error }) => state.merge({ fetching: false, error, authToken: null })\n\n// we're attempting to load token from startup sagas\nexport const load = (state) => state.merge({ loading: true })\n\nexport const loadSuccess = (state) => state.merge({ loading: false })\n\n// we need to logout, meaning clear access tokens and account\nexport const logoutRequest = (state) => state;\n\n// we've logged out\nexport const logoutSuccess = state => INITIAL_STATE\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: request,\n  [Types.LOGIN_SUCCESS]: success,\n  [Types.LOGIN_FAILURE]: failure,\n  [Types.LOGIN_LOAD]: load,\n  [Types.LOGIN_LOAD_SUCCESS]: loadSuccess,\n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess\n\n})\n\n/* ------------- Selectors ------------- */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}