{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport useDevToolsBase from \"./useDevToolsBase\";\nvar FlipperModule;\ntry {\n  FlipperModule = require('react-native-flipper');\n} catch (e) {}\nexport default function useFlipper(ref) {\n  if (FlipperModule == null) {\n    throw new Error(\"Please install the 'react-native-flipper' package in your project to use Flipper integration for React Navigation.\");\n  }\n  var _FlipperModule = FlipperModule,\n    addPlugin = _FlipperModule.addPlugin;\n  var connectionRef = React.useRef();\n  var _useDevToolsBase = useDevToolsBase(ref, function (result) {\n      var connection = connectionRef.current;\n      if (!connection) {\n        return;\n      }\n      switch (result.type) {\n        case 'init':\n          connection.send('init', {\n            id: nanoid(),\n            state: result.state\n          });\n          break;\n        case 'action':\n          connection.send('action', {\n            id: nanoid(),\n            action: result.action,\n            state: result.state,\n            stack: result.stack\n          });\n          break;\n      }\n    }),\n    resetRoot = _useDevToolsBase.resetRoot;\n  React.useEffect(function () {\n    addPlugin({\n      getId: function getId() {\n        return 'react-navigation';\n      },\n      onConnect: function () {\n        var _onConnect = _asyncToGenerator(function* (connection) {\n          connectionRef.current = connection;\n          var on = function on(event, listener) {\n            connection.receive(event, function (params, responder) {\n              try {\n                var result = listener(params);\n                responder.success(result !== null && result !== void 0 ? result : null);\n              } catch (e) {\n                responder.error(e);\n              }\n            });\n          };\n          on('navigation.invoke', function (_ref) {\n            var _ref$current2;\n            var _ref$current;\n            var method = _ref.method,\n              _ref$args = _ref.args,\n              args = _ref$args === void 0 ? [] : _ref$args;\n            switch (method) {\n              case 'resetRoot':\n                return resetRoot(args[0]);\n              default:\n                return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : (_ref$current2 = _ref$current)[method].apply(_ref$current2, _toConsumableArray(args));\n            }\n          });\n          on('linking.invoke', function (_ref2) {\n            var _global$REACT_NAVIGAT, _global$REACT_NAVIGAT2, _args$;\n            var method = _ref2.method,\n              _ref2$args = _ref2.args,\n              args = _ref2$args === void 0 ? [] : _ref2$args;\n            var linking = ref.current ? (_global$REACT_NAVIGAT = global.REACT_NAVIGATION_DEVTOOLS) === null || _global$REACT_NAVIGAT === void 0 ? void 0 : (_global$REACT_NAVIGAT2 = _global$REACT_NAVIGAT.get(ref.current)) === null || _global$REACT_NAVIGAT2 === void 0 ? void 0 : _global$REACT_NAVIGAT2.linking : null;\n            switch (method) {\n              case 'getStateFromPath':\n              case 'getPathFromState':\n              case 'getActionFromState':\n                return linking === null || linking === void 0 ? void 0 : linking[method](args[0], (_args$ = args[1]) !== null && _args$ !== void 0 && _args$.trim() ? eval(\"(function() { return \" + args[1] + \"; }())\") : linking.config);\n              default:\n                return linking === null || linking === void 0 ? void 0 : linking[method].apply(linking, _toConsumableArray(args));\n            }\n          });\n        });\n        function onConnect(_x) {\n          return _onConnect.apply(this, arguments);\n        }\n        return onConnect;\n      }(),\n      onDisconnect: function onDisconnect() {\n        connectionRef.current = undefined;\n      },\n      runInBackground: function runInBackground() {\n        return false;\n      }\n    });\n  }, [addPlugin, ref, resetRoot]);\n}","map":{"version":3,"names":["nanoid","React","useDevToolsBase","FlipperModule","require","e","useFlipper","ref","Error","_FlipperModule","addPlugin","connectionRef","useRef","_useDevToolsBase","result","connection","current","type","send","id","state","action","stack","resetRoot","useEffect","getId","onConnect","_onConnect","_asyncToGenerator","on","event","listener","receive","params","responder","success","error","_ref","_ref$current2","_ref$current","method","_ref$args","args","apply","_toConsumableArray","_ref2","_global$REACT_NAVIGAT","_global$REACT_NAVIGAT2","_args$","_ref2$args","linking","global","REACT_NAVIGATION_DEVTOOLS","get","trim","eval","config","_x","arguments","onDisconnect","undefined","runInBackground"],"sources":["useFlipper.tsx"],"sourcesContent":["import type { NavigationContainerRef } from '@react-navigation/core';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\nimport type { Flipper } from 'react-native-flipper';\n\nimport useDevToolsBase from './useDevToolsBase';\n\nlet FlipperModule: typeof import('react-native-flipper') | undefined;\n\ntry {\n  FlipperModule = require('react-native-flipper');\n} catch (e) {\n  // Do nothing\n}\n\nexport default function useFlipper(\n  ref: React.RefObject<NavigationContainerRef<any>>\n) {\n  if (FlipperModule == null) {\n    throw new Error(\n      \"Please install the 'react-native-flipper' package in your project to use Flipper integration for React Navigation.\"\n    );\n  }\n\n  const { addPlugin } = FlipperModule;\n\n  const connectionRef = React.useRef<Flipper.FlipperConnection>();\n\n  const { resetRoot } = useDevToolsBase(ref, (result) => {\n    const connection = connectionRef.current;\n\n    if (!connection) {\n      return;\n    }\n\n    switch (result.type) {\n      case 'init':\n        connection.send('init', {\n          id: nanoid(),\n          state: result.state,\n        });\n        break;\n      case 'action':\n        connection.send('action', {\n          id: nanoid(),\n          action: result.action,\n          state: result.state,\n          stack: result.stack,\n        });\n        break;\n    }\n  });\n\n  React.useEffect(() => {\n    addPlugin({\n      getId() {\n        return 'react-navigation';\n      },\n      async onConnect(connection) {\n        connectionRef.current = connection;\n\n        const on = (event: string, listener: (params: any) => Promise<any>) => {\n          connection.receive(event, (params, responder) => {\n            try {\n              const result = listener(params);\n\n              // Return null instead of undefined, otherwise flipper doesn't respond\n              responder.success(result ?? null);\n            } catch (e) {\n              responder.error(e);\n            }\n          });\n        };\n\n        on('navigation.invoke', ({ method, args = [] }) => {\n          switch (method) {\n            case 'resetRoot':\n              return resetRoot(args[0]);\n            default:\n              // @ts-expect-error: we want to call arbitrary methods here\n              return ref.current?.[method](...args);\n          }\n        });\n\n        on('linking.invoke', ({ method, args = [] }) => {\n          const linking: any = ref.current\n            ? // @ts-ignore: this might not exist\n              global.REACT_NAVIGATION_DEVTOOLS?.get(ref.current)?.linking\n            : null;\n\n          switch (method) {\n            case 'getStateFromPath':\n            case 'getPathFromState':\n            case 'getActionFromState':\n              return linking?.[method](\n                args[0],\n                args[1]?.trim()\n                  ? // eslint-disable-next-line no-eval\n                    eval(`(function() { return ${args[1]}; }())`)\n                  : linking.config\n              );\n            default:\n              return linking?.[method](...args);\n          }\n        });\n      },\n      onDisconnect() {\n        connectionRef.current = undefined;\n      },\n      runInBackground() {\n        return false;\n      },\n    });\n  }, [addPlugin, ref, resetRoot]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}