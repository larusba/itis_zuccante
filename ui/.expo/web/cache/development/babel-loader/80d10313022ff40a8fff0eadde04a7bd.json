{"ast":null,"code":"import { has, when } from 'ramda';\nimport Immutable from 'seamless-immutable';\nvar isImmutable = has('asMutable');\nvar convertToJs = function convertToJs(state) {\n  return state.asMutable({\n    deep: true\n  });\n};\nvar fromImmutable = when(isImmutable, convertToJs);\nvar toImmutable = function toImmutable(raw) {\n  return Immutable(raw);\n};\nexport default {\n  out: function out(state) {\n    return toImmutable(state);\n  },\n  in: function _in(raw) {\n    return fromImmutable(raw);\n  }\n};","map":{"version":3,"names":["has","when","Immutable","isImmutable","convertToJs","state","asMutable","deep","fromImmutable","toImmutable","raw","out","in","_in"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/util/immutable-persistence-transform.js"],"sourcesContent":["import { has, when } from 'ramda';\nimport Immutable from 'seamless-immutable'\n\n// is this object already Immutable?\nconst isImmutable = has('asMutable')\n\n// change this Immutable object into a JS object\nconst convertToJs = (state) => state.asMutable({ deep: true })\n\n// optionally convert this object into a JS object if it is Immutable\nconst fromImmutable = when(isImmutable, convertToJs)\n\n// convert this JS object into an Immutable object\nconst toImmutable = (raw) => Immutable(raw)\n\n// the transform interface that redux-persist is expecting\nexport default {\n  out: (state) => {\n    // console.log({ retrieving: state })\n    return toImmutable(state)\n  },\n  in: (raw) => {\n    // console.log({ storing: raw })\n    return fromImmutable(raw)\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,QAAQ,OAAO;AACjC,OAAOC,SAAS,MAAM,oBAAoB;AAG1C,IAAMC,WAAW,GAAGH,GAAG,CAAC,WAAW,CAAC;AAGpC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK;EAAA,OAAKA,KAAK,CAACC,SAAS,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;AAAA;AAG9D,IAAMC,aAAa,GAAGP,IAAI,CAACE,WAAW,EAAEC,WAAW,CAAC;AAGpD,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAIC,GAAG;EAAA,OAAKR,SAAS,CAACQ,GAAG,CAAC;AAAA;AAG3C,eAAe;EACbC,GAAG,EAAE,SAAAA,IAACN,KAAK,EAAK;IAEd,OAAOI,WAAW,CAACJ,KAAK,CAAC;EAC3B,CAAC;EACDO,EAAE,EAAE,SAAAC,IAACH,GAAG,EAAK;IAEX,OAAOF,aAAa,CAACE,GAAG,CAAC;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module"}