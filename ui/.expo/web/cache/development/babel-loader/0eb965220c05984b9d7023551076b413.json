{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"name\", \"inputType\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { useFormikContext } from 'formik';\nimport AppTextInput from \"./inputs/jhi-text-input\";\nimport AppSwitchInput from \"./inputs/jhi-switch-input\";\nimport AppListInput from \"./inputs/jhi-list-input\";\nimport AppMultiListInput from \"./inputs/jhi-multi-list-input\";\nimport AppDateInput from \"./inputs/jhi-date-input\";\nimport AppImageInput from \"./inputs/jhi-image-input\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ApplicationStyles from \"../../themes/application.styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create(_objectSpread({}, ApplicationStyles.screen));\nexport default React.forwardRef(function (props, ref) {\n  var name = props.name,\n    inputType = props.inputType,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var _useFormikContext = useFormikContext(),\n    setFieldTouched = _useFormikContext.setFieldTouched,\n    setFieldValue = _useFormikContext.setFieldValue,\n    values = _useFormikContext.values,\n    errors = _useFormikContext.errors,\n    touched = _useFormikContext.touched;\n  if (!inputType) {\n    inputType = 'text';\n  }\n  if (!['text', 'boolean', 'number', 'date', 'datetime', 'select-one', 'select-multiple', 'image', 'image-base64'].includes(inputType)) {\n    return _jsxs(Text, {\n      style: styles.errorText,\n      children: [\"INVALID INPUT TYPE '\", inputType, \"'\"]\n    });\n  }\n  if (inputType === 'date' || inputType === 'datetime' && !(values[name] instanceof Date)) {\n    values[name] = new Date(values[name]);\n  }\n  if (inputType === 'boolean') {\n    values[name] = Boolean(values[name]);\n  }\n  if (inputType === 'number' && (typeof values[name]).toLowerCase() === 'number') {\n    values[name] = String(values[name]);\n  }\n  var hasError = errors[name] && touched[name];\n  return _jsxs(React.Fragment, {\n    children: [(!inputType || inputType === 'text') && _jsx(AppTextInput, _objectSpread({\n      ref: ref,\n      value: values[name],\n      onChangeText: function onChangeText(text) {\n        return setFieldValue(name, text);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), inputType === 'number' && _jsx(AppTextInput, _objectSpread({\n      ref: ref,\n      keyboardType: \"numeric\",\n      value: values[name],\n      onChangeText: function onChangeText(text) {\n        var numberRegex = new RegExp(/^-?(\\d*)?\\.?(\\d+)?$/);\n        if (text.length === 0 || numberRegex.test(text.toString())) {\n          setFieldValue(name, text);\n        }\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), inputType === 'boolean' && _jsx(AppSwitchInput, _objectSpread({\n      ref: ref,\n      value: values[name],\n      onValueChange: function onValueChange(value) {\n        return setFieldValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), inputType === 'select-one' && _jsx(AppListInput, _objectSpread({\n      ref: ref,\n      value: values[name],\n      onValueChange: function onValueChange(value) {\n        return setFieldValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), inputType === 'select-multiple' && _jsx(AppMultiListInput, _objectSpread({\n      ref: ref,\n      value: values[name],\n      onSelectedItemsChange: function onSelectedItemsChange(value) {\n        return setFieldValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), (inputType === 'date' || inputType === 'datetime') && _jsx(AppDateInput, _objectSpread({\n      ref: ref,\n      inputType: inputType,\n      value: values[name],\n      selected: values[name],\n      onChange: function onChange(value) {\n        return setFieldValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), (inputType === 'image-base64' || inputType === 'image') && _jsx(AppImageInput, _objectSpread({\n      ref: ref,\n      inputType: inputType,\n      value: values[name],\n      onChange: function onChange(value) {\n        return setFieldValue(name, value);\n      },\n      onBlur: function onBlur() {\n        return setFieldTouched(name);\n      },\n      error: hasError\n    }, otherProps)), hasError && _jsx(Text, {\n      style: styles.errorText,\n      children: errors[name]\n    })]\n  });\n});","map":{"version":3,"names":["React","useFormikContext","AppTextInput","AppSwitchInput","AppListInput","AppMultiListInput","AppDateInput","AppImageInput","StyleSheet","Text","ApplicationStyles","jsxs","_jsxs","jsx","_jsx","styles","create","_objectSpread","screen","forwardRef","props","ref","name","inputType","otherProps","_objectWithoutProperties","_excluded","_useFormikContext","setFieldTouched","setFieldValue","values","errors","touched","includes","style","errorText","children","Date","Boolean","toLowerCase","String","hasError","Fragment","value","onChangeText","text","onBlur","error","keyboardType","numberRegex","RegExp","length","test","toString","onValueChange","onSelectedItemsChange","selected","onChange"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/shared/components/form/jhi-form-field.js"],"sourcesContent":["import React from 'react';\nimport { useFormikContext } from 'formik';\n\nimport AppTextInput from './inputs/jhi-text-input';\nimport AppSwitchInput from './inputs/jhi-switch-input';\nimport AppListInput from './inputs/jhi-list-input';\nimport AppMultiListInput from './inputs/jhi-multi-list-input';\nimport AppDateInput from './inputs/jhi-date-input';\nimport AppImageInput from './inputs/jhi-image-input';\nimport { StyleSheet, Text } from 'react-native';\nimport ApplicationStyles from '../../themes/application.styles';\n\nconst styles = StyleSheet.create({\n  ...ApplicationStyles.screen,\n});\n\nexport default React.forwardRef((props, ref) => {\n  let { name, inputType, ...otherProps } = props;\n  const { setFieldTouched, setFieldValue, values, errors, touched } = useFormikContext();\n\n  if (!inputType) {\n    inputType = 'text';\n  }\n  if (!['text', 'boolean', 'number', 'date', 'datetime', 'select-one', 'select-multiple', 'image', 'image-base64'].includes(inputType)) {\n    return <Text style={styles.errorText}>INVALID INPUT TYPE '{inputType}'</Text>;\n  }\n\n  // ensure fields are the correct format\n  if (inputType === 'date' || (inputType === 'datetime' && !(values[name] instanceof Date))) {\n    // date values can't be strings\n    values[name] = new Date(values[name]);\n  }\n  if (inputType === 'boolean') {\n    values[name] = Boolean(values[name]);\n  }\n  if (inputType === 'number' && (typeof values[name]).toLowerCase() === 'number') {\n    // number values have to be strings\n    values[name] = String(values[name]);\n  }\n\n  const hasError = errors[name] && touched[name];\n  return (\n    <React.Fragment>\n      {(!inputType || inputType === 'text') && (\n        <AppTextInput\n          ref={ref}\n          value={values[name]}\n          onChangeText={text => setFieldValue(name, text)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {inputType === 'number' && (\n        <AppTextInput\n          ref={ref}\n          keyboardType=\"numeric\"\n          value={values[name]}\n          onChangeText={text => {\n            const numberRegex = new RegExp(/^-?(\\d*)?\\.?(\\d+)?$/);\n            if (text.length === 0 || numberRegex.test(text.toString())) {\n              setFieldValue(name, text);\n            }\n          }}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {inputType === 'boolean' && (\n        <AppSwitchInput\n          ref={ref}\n          value={values[name]}\n          onValueChange={value => setFieldValue(name, value)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {inputType === 'select-one' && (\n        <AppListInput\n          ref={ref}\n          value={values[name]}\n          onValueChange={value => setFieldValue(name, value)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {inputType === 'select-multiple' && (\n        <AppMultiListInput\n          ref={ref}\n          value={values[name]}\n          onSelectedItemsChange={value => setFieldValue(name, value)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {(inputType === 'date' || inputType === 'datetime') && (\n        <AppDateInput\n          ref={ref}\n          inputType={inputType}\n          value={values[name]}\n          selected={values[name]}\n          onChange={value => setFieldValue(name, value)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {(inputType === 'image-base64' || inputType === 'image') && (\n        <AppImageInput\n          ref={ref}\n          inputType={inputType}\n          value={values[name]}\n          onChange={value => setFieldValue(name, value)}\n          onBlur={() => setFieldTouched(name)}\n          error={hasError}\n          {...otherProps}\n        />\n      )}\n      {hasError && <Text style={styles.errorText}>{errors[name]}</Text>}\n    </React.Fragment>\n  );\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}