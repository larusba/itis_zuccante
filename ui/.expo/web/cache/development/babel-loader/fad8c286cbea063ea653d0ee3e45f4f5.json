{"ast":null,"code":"import * as React from 'react';\nimport { DrawerActions } from '@react-navigation/native';\nexport var isReadyRef = React.createRef();\nexport var navigationRef = React.createRef();\nexport function navigate(name, params) {\n  if (isReadyRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {}\n}\nexport function toggleDrawer() {\n  navigationRef.current.dispatch(DrawerActions.toggleDrawer());\n}\nexport function goBackOrIfParamsOrDefault(targetScreen, defaultScreen) {\n  var currentRoute = navigationRef.current.getCurrentRoute();\n  var hasDefinedParams = Object.values(currentRoute.params).some(function (v) {\n    return v;\n  });\n  if (navigationRef.current.canGoBack()) {\n    navigationRef.current.goBack();\n  } else if (currentRoute && hasDefinedParams) {\n    navigate(targetScreen, currentRoute.params);\n  } else {\n    navigate(defaultScreen);\n  }\n}","map":{"version":3,"names":["React","DrawerActions","isReadyRef","createRef","navigationRef","navigate","name","params","current","toggleDrawer","dispatch","goBackOrIfParamsOrDefault","targetScreen","defaultScreen","currentRoute","getCurrentRoute","hasDefinedParams","Object","values","some","v","canGoBack","goBack"],"sources":["/Users/albertodelazzari/repositories/ambulanza_veloce/ui/app/navigation/nav-ref.js"],"sourcesContent":["// From: https://reactnavigation.org/docs/navigating-without-navigation-prop/\nimport * as React from 'react';\nimport { DrawerActions } from '@react-navigation/native';\n\nexport const isReadyRef = React.createRef();\n\nexport const navigationRef = React.createRef();\n\nexport function navigate(name, params) {\n  if (isReadyRef.current && navigationRef.current) {\n    // Perform navigation if the app has mounted\n    navigationRef.current.navigate(name, params);\n  } else {\n    // You can decide what to do if the app hasn't mounted\n    // You can ignore this, or add these actions to a queue you can call later\n  }\n}\nexport function toggleDrawer() {\n  navigationRef.current.dispatch(DrawerActions.toggleDrawer());\n}\n\nexport function goBackOrIfParamsOrDefault(targetScreen, defaultScreen) {\n  const currentRoute = navigationRef.current.getCurrentRoute();\n  const hasDefinedParams = Object.values(currentRoute.params).some(v => v);\n  if (navigationRef.current.canGoBack()) {\n    navigationRef.current.goBack();\n  } else if (currentRoute && hasDefinedParams) {\n    navigate(targetScreen, currentRoute.params);\n  } else {\n    navigate(defaultScreen);\n  }\n}\n"],"mappings":"AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,0BAA0B;AAExD,OAAO,IAAMC,UAAU,GAAGF,KAAK,CAACG,SAAS,CAAC,CAAC;AAE3C,OAAO,IAAMC,aAAa,GAAGJ,KAAK,CAACG,SAAS,CAAC,CAAC;AAE9C,OAAO,SAASE,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAE;EACrC,IAAIL,UAAU,CAACM,OAAO,IAAIJ,aAAa,CAACI,OAAO,EAAE;IAE/CJ,aAAa,CAACI,OAAO,CAACH,QAAQ,CAACC,IAAI,EAAEC,MAAM,CAAC;EAC9C,CAAC,MAAM,CAGP;AACF;AACA,OAAO,SAASE,YAAYA,CAAA,EAAG;EAC7BL,aAAa,CAACI,OAAO,CAACE,QAAQ,CAACT,aAAa,CAACQ,YAAY,CAAC,CAAC,CAAC;AAC9D;AAEA,OAAO,SAASE,yBAAyBA,CAACC,YAAY,EAAEC,aAAa,EAAE;EACrE,IAAMC,YAAY,GAAGV,aAAa,CAACI,OAAO,CAACO,eAAe,CAAC,CAAC;EAC5D,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAACJ,YAAY,CAACP,MAAM,CAAC,CAACY,IAAI,CAAC,UAAAC,CAAC;IAAA,OAAIA,CAAC;EAAA,EAAC;EACxE,IAAIhB,aAAa,CAACI,OAAO,CAACa,SAAS,CAAC,CAAC,EAAE;IACrCjB,aAAa,CAACI,OAAO,CAACc,MAAM,CAAC,CAAC;EAChC,CAAC,MAAM,IAAIR,YAAY,IAAIE,gBAAgB,EAAE;IAC3CX,QAAQ,CAACO,YAAY,EAAEE,YAAY,CAACP,MAAM,CAAC;EAC7C,CAAC,MAAM;IACLF,QAAQ,CAACQ,aAAa,CAAC;EACzB;AACF"},"metadata":{},"sourceType":"module"}